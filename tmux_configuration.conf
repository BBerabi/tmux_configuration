# set the prefix to Control+s, unbind original prefix
set -g prefix C-s
unbind C-b
bind C-s send-prefix

# let the windows start from index 1
set -g base-index 1

# set escape time to 20 miliseconds for vim
set -g escape-time 1

# set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# bind r to reload to tmux configration
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# splitting panes with | and  -
bind | split-window -h
bind - split-window -v

# moving between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# quick window selection, -r makes it repeatable, you dont need to press prefix every time.
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# set 256 color mode
set -g default-terminal "screen-256color"

# set the status line's colors
set -g status-style fg=white,bold,bg=black

# color the active window red and others cyan
setw -g window-status-style fg=cyan,bg=black
setw -g window-status-current-style fg=white,bold,bg=red

# colors for pane borders
setw -g pane-border-style fg=black,bg=default
setw -g pane-active-border-style fg=white,bg=default

# command / message line
set -g message-style fg=white,bold,bg=black


set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I"
set -g status-right "#[fg=cyan]%d %b %R"

# center the window list
set -g status-justify centre

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

bind Escape copy-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection
bind-key -T copy-mode-vi r send -X rectangle-toggle
# unbind p

set -g @plugin 'tmux-plugins/tmux-yank'
# bind p paste-buffer
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"


# Prefix Ctrl-C takes whats in the buffer and sends it to system clipboard via xclip
# bind C-c run "tmux save-buffer - | xclip -sel clip -i"
# y in copy mode takes the selection and sends it to system clipboard via xclip
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
# prefix ctrl-v fills tmux buffer from system clipboard via xclip then pastes from bugger into tmux window
# bind C-v run "tmux set-buffer \"$(xclip -sel clip -o)\"; tmux paste-buffer"


# set -g status-bg black
# set -g status-fg white
# set -g status-left-length 20
# set -g status-right-length 30

# turn on moving around with mouse 
# set -g mouse on
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# To copy, drag to highlight text in yellow, press Enter and then release mouse
# Use vim keybindings in copy mode
setw -g mode-keys vi
#Update default binding of `Enter` to also use copy-pipe
#bind -t vi-copy Enter
#unbind-key -t vi-copy Enter copy-pipe "pbcopy"
# unbind -T copy-mode-vi MouseDragEnd1Pane


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
